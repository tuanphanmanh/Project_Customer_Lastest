<Activity mc:Ignorable="sap sap2010" x:Class="Main" sap2010:ExpressionActivityEditor.ExpressionActivityEditor="C#" sap:VirtualizedContainerService.HintSize="902,9998" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.Collections;assembly=System.Private.CoreLib" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System.Text.RegularExpressions" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:umab="clr-namespace:UiPath.Mail.Activities.Business;assembly=UiPath.Mail.Activities" xmlns:umabh="clr-namespace:UiPath.Mail.Activities.Business.HtmlEditor;assembly=UiPath.Mail.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Management.Automation</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.CV</x:String>
      <x:String>UiPath.Shared.ObjectLibrary</x:String>
      <x:String>UiPath.CV.Activities</x:String>
      <x:String>UiPath.CV.Activities.Interfaces</x:String>
      <x:String>UiPath.PDF</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>UiPath.PDF.Activities.PDF</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>UiPath.Database.Activities</x:String>
      <x:String>UiPath.Core.Activities.TextModifications</x:String>
      <x:String>UiPath.Activities.System.Workflow.Business</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Mail.Activities.Business.HtmlEditor</x:String>
      <x:String>UiPath.Mail.Activities.Business</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Management.Automation</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.CV.Activities</AssemblyReference>
      <AssemblyReference>UiPath.PDF</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Core</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>Exchange_Rate.Core</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Main Sequence" sap:VirtualizedContainerService.HintSize="738,9933" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sc:Hashtable" Name="config">
        <Variable.Default>
          <CSharpValue x:TypeArguments="sc:Hashtable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_12">new Hashtable();</CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:String" Name="fileDownloadedPath" />
      <Variable x:TypeArguments="x:String" Name="fileName" />
      <Variable x:TypeArguments="x:String" Name="fileSavedPath" />
      <Variable x:TypeArguments="x:String" Name="CeilingRate">
        <Variable.Default>
          <Literal x:TypeArguments="x:String" Value="" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:String" Name="SvbRate">
        <Variable.Default>
          <Literal x:TypeArguments="x:String" Value="" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:String" Name="FloorRate">
        <Variable.Default>
          <Literal x:TypeArguments="x:String" Value="" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="s:Guid" Name="guid" />
      <Variable x:TypeArguments="x:String" Name="ExchangeDate">
        <Variable.Default>
          <Literal x:TypeArguments="x:String" Value="" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:String" Name="Version">
        <Variable.Default>
          <Literal x:TypeArguments="x:String" Value="" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:String" Default="Server=tcp:192.168.6.20,1433;Database=MMS;User Id=sa;Password=Prod@mms@20@##;Trust Server Certificate=true;" Name="strConnString" />
      <Variable x:TypeArguments="x:Boolean" Name="IsNewVersion" />
      <Variable x:TypeArguments="x:String" Default="Microsoft.Data.SqlClient" Name="strProvider" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="Step0. Load Config File" sap:VirtualizedContainerService.HintSize="696,2052" sap2010:WorkflowViewState.IdRef="Sequence_27">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:Boolean" Name="IsFolderExists" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="586,582" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" WorkbookPath="config\config.xlsx">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="552,472" sap2010:WorkflowViewState.IdRef="Sequence_4">
              <Sequence.Variables>
                <Variable x:TypeArguments="sd:DataTable" Name="configTable" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelReadRange AddHeaders="False" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="510,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" PreserveFormat="True" Range="A2" SheetName="Sheet1">
                <ui:ExcelReadRange.DataTable>
                  <OutArgument x:TypeArguments="sd:DataTable">
                    <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_1">configTable</CSharpReference>
                  </OutArgument>
                </ui:ExcelReadRange.DataTable>
              </ui:ExcelReadRange>
              <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="510,284" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
                <ui:ForEachRow.Body>
                  <ActivityAction x:TypeArguments="sd:DataRow">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="476,169" sap2010:WorkflowViewState.IdRef="Sequence_7">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_4">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Object">
                            <CSharpReference x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpReference`1_11">config[CurrentRow.ItemArray[0]]</CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Object">
                            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_18">CurrentRow.ItemArray[1]</CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEachRow.Body>
                <ui:ForEachRow.DataTable>
                  <InArgument x:TypeArguments="sd:DataTable">
                    <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_5">configTable</CSharpValue>
                  </InArgument>
                </ui:ForEachRow.DataTable>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ForEachRow>
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExcelApplicationScope>
      <If sap:VirtualizedContainerService.HintSize="586,383" sap2010:WorkflowViewState.IdRef="If_1">
        <If.Condition>
          <InArgument x:TypeArguments="x:Boolean">
            <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_21">config.Count == 0</CSharpValue>
          </InArgument>
        </If.Condition>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="376,201" sap2010:WorkflowViewState.IdRef="Sequence_9">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ErrorHandle.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="ErrorHandle.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="errors">Không thể lấy cấu hình file config. Có thể đường dẫn sai hoặc chưa cấu hình.</InArgument>
                <InArgument x:TypeArguments="sc:Hashtable" x:Key="config">
                  <CSharpValue x:TypeArguments="sc:Hashtable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_119">config</CSharpValue>
                </InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_10">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Sequence>
        </If.Else>
      </If>
      <Assign sap:VirtualizedContainerService.HintSize="586,82" sap2010:WorkflowViewState.IdRef="Assign_10">
        <Assign.To>
          <OutArgument x:TypeArguments="s:Guid">
            <CSharpReference x:TypeArguments="s:Guid" sap2010:WorkflowViewState.IdRef="CSharpReference`1_41">guid</CSharpReference>
          </OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="s:Guid">
            <CSharpValue x:TypeArguments="s:Guid" sap2010:WorkflowViewState.IdRef="CSharpValue`1_132">Guid.NewGuid()</CSharpValue>
          </InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="586,82" sap2010:WorkflowViewState.IdRef="Assign_6">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">
            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_16">fileName</CSharpReference>
          </OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_143">DateTime.Now.ToString("yyyyMMddHHmmss") + "_" + guid.ToString()</CSharpValue>
          </InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="586,82" sap2010:WorkflowViewState.IdRef="Assign_5">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">
            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_14">fileDownloadedPath</CSharpReference>
          </OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_157" xml:space="preserve">config["EXRATE_PDF_PATH"] + "\\" + DateTime.Now.ToString("yyyyMMdd")  +   "\\daily-rates_" + fileName + ".pdf"</CSharpValue>
          </InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="586,81" sap2010:WorkflowViewState.IdRef="Assign_9">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">
            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_35">fileSavedPath</CSharpReference>
          </OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_158" xml:space="preserve">config["EXRATE_EXCEL_PATH"] + "\\" + DateTime.Now.ToString("yyyyMMdd")  +  "\\daily-rates_" + fileName + ".xlsx"</CSharpValue>
          </InArgument>
        </Assign.Value>
      </Assign>
      <ui:FolderExistsX DisplayName="Folder Exists" sap:VirtualizedContainerService.HintSize="586,133" sap2010:WorkflowViewState.IdRef="FolderExistsX_1">
        <ui:FolderExistsX.Exists>
          <OutArgument x:TypeArguments="x:Boolean">
            <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_46">IsFolderExists</CSharpReference>
          </OutArgument>
        </ui:FolderExistsX.Exists>
        <ui:FolderExistsX.Path>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_159">config["EXRATE_EXCEL_PATH"] + "\\" + DateTime.Now.ToString("yyyyMMdd")</CSharpValue>
          </InArgument>
        </ui:FolderExistsX.Path>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:FolderExistsX>
      <If sap:VirtualizedContainerService.HintSize="586,52" sap2010:WorkflowViewState.IdRef="If_4">
        <If.Condition>
          <InArgument x:TypeArguments="x:Boolean">
            <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_163">IsFolderExists==false</CSharpValue>
          </InArgument>
        </If.Condition>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="376,168" sap2010:WorkflowViewState.IdRef="Sequence_36">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="334,80" sap2010:WorkflowViewState.IdRef="CreateDirectory_1">
              <ui:CreateDirectory.Path>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_161">config["EXRATE_EXCEL_PATH"] + "\\" + DateTime.Now.ToString("yyyyMMdd")</CSharpValue>
                </InArgument>
              </ui:CreateDirectory.Path>
            </ui:CreateDirectory>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_37" />
        </If.Else>
      </If>
      <ui:FolderExistsX DisplayName="Folder Exists" sap:VirtualizedContainerService.HintSize="586,52" sap2010:WorkflowViewState.IdRef="FolderExistsX_2">
        <ui:FolderExistsX.Exists>
          <OutArgument x:TypeArguments="x:Boolean">
            <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_47">IsFolderExists</CSharpReference>
          </OutArgument>
        </ui:FolderExistsX.Exists>
        <ui:FolderExistsX.Path>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_164">config["EXRATE_PDF_PATH"] + "\\" + DateTime.Now.ToString("yyyyMMdd")</CSharpValue>
          </InArgument>
        </ui:FolderExistsX.Path>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:FolderExistsX>
      <If sap:VirtualizedContainerService.HintSize="586,52" sap2010:WorkflowViewState.IdRef="If_5">
        <If.Condition>
          <InArgument x:TypeArguments="x:Boolean">
            <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_165">IsFolderExists==false</CSharpValue>
          </InArgument>
        </If.Condition>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="376,168" sap2010:WorkflowViewState.IdRef="Sequence_38">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="334,80" sap2010:WorkflowViewState.IdRef="CreateDirectory_2">
              <ui:CreateDirectory.Path>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_167">config["EXRATE_PDF_PATH"] + "\\" + DateTime.Now.ToString("yyyyMMdd")</CSharpValue>
                </InArgument>
              </ui:CreateDirectory.Path>
            </ui:CreateDirectory>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_39" />
        </If.Else>
      </If>
    </Sequence>
    <Sequence DisplayName="Step1. Download PDF File" sap:VirtualizedContainerService.HintSize="696,1207" sap2010:WorkflowViewState.IdRef="Sequence_28">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:Boolean" Name="isExist" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="472,650" sap2010:WorkflowViewState.IdRef="TryCatch_2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <TryCatch.Try>
          <ui:TimeoutScope DisplayName="Timeout Scope" sap:VirtualizedContainerService.HintSize="434,422" sap2010:WorkflowViewState.IdRef="TimeoutScope_1" ThrowExceptionAfter="00:01:30" TimeoutMessage="Download thất bại. Timeout 60s">
            <ui:TimeoutScope.Body>
              <ActivityAction x:TypeArguments="Activity">
                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,297" sap2010:WorkflowViewState.IdRef="Sequence_13">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="WriteLine_1">
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_154" xml:space="preserve">"curl \"" + config["EXRATE_URL"] +  "\" -o \"" + fileDownloadedPath +  "\""</CSharpValue>
                    </InArgument>
                  </WriteLine>
                  <ui:InvokePowerShell x:TypeArguments="x:Object" ContinueOnError="True" DisplayName="Invoke Power Shell" sap:VirtualizedContainerService.HintSize="334,79" sap2010:WorkflowViewState.IdRef="InvokePowerShell`1_5" IsScript="True">
                    <ui:InvokePowerShell.CommandText>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_39" xml:space="preserve">"curl \"" + config["EXRATE_URL"] +  "\" -o \"" + fileDownloadedPath +  "\""</CSharpValue>
                      </InArgument>
                    </ui:InvokePowerShell.CommandText>
                    <ui:InvokePowerShell.PowerShellVariables>
                      <scg:Dictionary x:TypeArguments="x:String, Argument" />
                    </ui:InvokePowerShell.PowerShellVariables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokePowerShell>
                </Sequence>
              </ActivityAction>
            </ui:TimeoutScope.Body>
          </ui:TimeoutScope>
        </TryCatch.Try>
        <TryCatch.Catches>
          <Catch x:TypeArguments="s:TimeoutException" sap:VirtualizedContainerService.HintSize="438,21" sap2010:WorkflowViewState.IdRef="Catch`1_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ActivityAction x:TypeArguments="s:TimeoutException">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="s:TimeoutException" Name="ex" />
              </ActivityAction.Argument>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ErrorHandle.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="ErrorHandle.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="errors">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_121">ex.Message</CSharpValue>
                  </InArgument>
                  <InArgument x:TypeArguments="sc:Hashtable" x:Key="config">
                    <CSharpValue x:TypeArguments="sc:Hashtable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_120">config</CSharpValue>
                  </InArgument>
                </ui:InvokeWorkflowFile.Arguments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokeWorkflowFile>
            </ActivityAction>
          </Catch>
        </TryCatch.Catches>
      </TryCatch>
      <ui:FileExistsX DisplayName="File Exists" sap:VirtualizedContainerService.HintSize="472,133" sap2010:WorkflowViewState.IdRef="FileExistsX_1">
        <ui:FileExistsX.Exists>
          <OutArgument x:TypeArguments="x:Boolean">
            <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_13">isExist</CSharpReference>
          </OutArgument>
        </ui:FileExistsX.Exists>
        <ui:FileExistsX.Path>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_40">fileDownloadedPath</CSharpValue>
          </InArgument>
        </ui:FileExistsX.Path>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:FileExistsX>
      <If DisplayName="Check file exist" sap:VirtualizedContainerService.HintSize="472,52" sap2010:WorkflowViewState.IdRef="If_2">
        <If.Condition>
          <InArgument x:TypeArguments="x:Boolean">
            <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_42">!isExist</CSharpValue>
          </InArgument>
        </If.Condition>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="376,201" sap2010:WorkflowViewState.IdRef="Sequence_11">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ErrorHandle.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="ErrorHandle.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="errors">Download PDF Thất Bại.Vui lòng kiểm tra lại đường dẫn</InArgument>
                <InArgument x:TypeArguments="sc:Hashtable" x:Key="config">
                  <CSharpValue x:TypeArguments="sc:Hashtable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_122">config</CSharpValue>
                </InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_12">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Sequence>
        </If.Else>
      </If>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="472,141" sap2010:WorkflowViewState.IdRef="LogMessage_1">
        <ui:LogMessage.Message>
          <InArgument x:TypeArguments="x:Object">
            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_116">"Downloaded &amp; Saved successfully"</CSharpValue>
          </InArgument>
        </ui:LogMessage.Message>
      </ui:LogMessage>
    </Sequence>
    <Sequence DisplayName="Step2. Parse Table From PDF" sap:VirtualizedContainerService.HintSize="696,6506" sap2010:WorkflowViewState.IdRef="Sequence_29">
      <Sequence.Variables>
        <Variable x:TypeArguments="sd:DataTable" Name="DataTable" />
        <Variable x:TypeArguments="x:String" Name="filePathBrowser" />
        <Variable x:TypeArguments="x:String" Name="pdfText" />
        <Variable x:TypeArguments="x:String" Name="text" />
        <Variable x:TypeArguments="sd:DataTable" Name="dt" />
        <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="matches" />
        <Variable x:TypeArguments="x:String" Name="firstmatch" />
        <Variable x:TypeArguments="x:String" Name="output">
          <Variable.Default>
            <Literal x:TypeArguments="x:String" Value="" />
          </Variable.Default>
        </Variable>
        <Variable x:TypeArguments="sd:DataTable" Name="headerDT" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="2.0. Parse PDF" sap:VirtualizedContainerService.HintSize="634,3412" sap2010:WorkflowViewState.IdRef="Sequence_16">
        <Sequence.Variables>
          <Variable x:TypeArguments="sd:DataTable" Name="test" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="572,52" sap2010:WorkflowViewState.IdRef="TryCatch_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <TryCatch.Try>
            <ui:ReadPDFText PreserveFormatting="{x:Null}" DisplayName="Read PDF Text" sap:VirtualizedContainerService.HintSize="322,82" sap2010:WorkflowViewState.IdRef="ReadPDFText_4" Range="All">
              <ui:ReadPDFText.FileName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_105">fileDownloadedPath</CSharpValue>
                </InArgument>
              </ui:ReadPDFText.FileName>
              <ui:ReadPDFText.Text>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_25">text</CSharpReference>
                </OutArgument>
              </ui:ReadPDFText.Text>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ReadPDFText>
          </TryCatch.Try>
          <TryCatch.Catches>
            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ActivityAction x:TypeArguments="s:Exception">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                </ActivityAction.Argument>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ErrorHandle.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="ErrorHandle.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="errors">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_124">exception.Message</CSharpValue>
                    </InArgument>
                    <InArgument x:TypeArguments="sc:Hashtable" x:Key="config">
                      <CSharpValue x:TypeArguments="sc:Hashtable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_123">config</CSharpValue>
                    </InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </ActivityAction>
            </Catch>
          </TryCatch.Catches>
        </TryCatch>
        <ui:InvokeCode ContinueOnError="{x:Null}" Code="string inputText = text;&#xA;string pattern = @&quot;MAJOR\sMINOR\sBUYING\sOD\sBUYING\sTT\sSELLING\sTT\/OD\s\s([\s\S]*?)\s^[A-Z]{1}[a-z]&quot;;&#xA;RegexOptions options = RegexOptions.Multiline;&#xA;MatchCollection matches = Regex.Matches(inputText, pattern, options);&#xA;if (matches.Count &gt; 0)&#xA;{&#xA;&#x9;&#x9;foreach (Match match in matches)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;GroupCollection groups = match.Groups;&#xA;&#x9;&#x9;&#x9;if (groups.Count &gt; 1)&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;string matchValue = groups[1].Value;&#xA;&#x9;&#x9;&#x9;&#x9;/// Lấy các giá trị trong bảng&#xA;&#x9;&#x9;&#x9;&#x9;matchValue = matchValue.Replace(&quot;Not applicable&quot;, &quot;Notapplicable&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;matchValue = Regex.Replace(matchValue, @&quot; +&quot;, &quot;|&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;matchValue = matchValue.Replace(&quot;Notapplicable&quot;, &quot;&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;output+=matchValue;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9; }&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;/// Lấy các rate&#xA;&#x9;&#x9;pattern = @&quot;Ceiling\s+(.*?)\s&quot;;&#xA;&#x9;&#x9;matches = Regex.Matches(inputText, pattern);&#xA;&#x9;&#x9;CeilingRate = matches[0].Groups[1].Value;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;pattern = @&quot;SBV rate\s+(.*?)\s&quot;;&#xA;&#x9;&#x9;matches = Regex.Matches(inputText, pattern);&#xA;&#x9;&#x9;SvbRate = matches[0].Groups[1].Value;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;pattern = @&quot;Floor\s+(.*?)\s&quot;;&#xA;&#x9;&#x9;matches = Regex.Matches(inputText, pattern);&#xA;&#x9;&#x9;FloorRate = matches[0].Groups[1].Value;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;pattern = @&quot;Date:\s+(.*?)\s+(.*?)\s+(.*?)\s&quot;;&#xA;&#x9;&#x9;matches = Regex.Matches(inputText, pattern);&#xA;&#x9;&#x9;ExchangeDate = matches[0].Groups[1].Value;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;pattern = @&quot;Version:\s+(.*?)\s&quot;;&#xA;&#x9;&#x9;matches = Regex.Matches(inputText, pattern);&#xA;&#x9;&#x9;Version = matches[0].Groups[1].Value;&#x9;&#x9;&#xA;}&#xA;else&#xA;{&#xA;&#x9;CeilingRate = &quot;&quot;;&#xA;&#x9;SvbRate = &quot;&quot;;&#xA;&#x9;FloorRate = &quot;&quot;;&#xA;&#x9;ExchangeDate = &quot;&quot;;&#xA;&#x9;Version = &quot;&quot;;&#xA;    output = &quot;&quot;; // Nếu không tìm thấy, gán giá trị rỗng cho biến output&#xA;}" DisplayName="Regex" sap:VirtualizedContainerService.HintSize="572,165" sap2010:WorkflowViewState.IdRef="InvokeCode_2" Language="CSharp">
          <ui:InvokeCode.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="text">
              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_73">text</CSharpValue>
            </InArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="output">
              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_33">output</CSharpReference>
            </OutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="CeilingRate">
              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_36">CeilingRate</CSharpReference>
            </OutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="SvbRate">
              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_37">SvbRate</CSharpReference>
            </OutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="FloorRate">
              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_38">FloorRate</CSharpReference>
            </OutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="ExchangeDate">
              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_49">ExchangeDate</CSharpReference>
            </OutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="Version">
              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_50">Version</CSharpReference>
            </OutArgument>
          </ui:InvokeCode.Arguments>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:InvokeCode>
        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="572,90" sap2010:WorkflowViewState.IdRef="WriteLine_2">
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_174">"Version = " + Version</CSharpValue>
          </InArgument>
        </WriteLine>
        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="572,90" sap2010:WorkflowViewState.IdRef="WriteLine_3">
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_175">"Exchange Date = " + ExchangeDate</CSharpValue>
          </InArgument>
        </WriteLine>
        <If DisplayName="If New version -&gt; Parse Completed, data available" sap:VirtualizedContainerService.HintSize="572,383" sap2010:WorkflowViewState.IdRef="If_3">
          <If.Condition>
            <InArgument x:TypeArguments="x:Boolean">
              <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_91">output.Length == 0 || CeilingRate.Length == 0 || FloorRate.Length == 0</CSharpValue>
            </InArgument>
          </If.Condition>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <Sequence sap:VirtualizedContainerService.HintSize="376,201" sap2010:WorkflowViewState.IdRef="Sequence_17">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ErrorHandle.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="ErrorHandle.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="errors">Trích xuất bảng thất bại. Vui lòng kiểm tra lại file PDF</InArgument>
                  <InArgument x:TypeArguments="sc:Hashtable" x:Key="config">
                    <CSharpValue x:TypeArguments="sc:Hashtable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_125">config</CSharpValue>
                  </InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
            </Sequence>
          </If.Then>
          <If.Else>
            <Sequence sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_18">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Sequence>
          </If.Else>
        </If>
        <ui:BuildDataTable DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="572,60" sap2010:WorkflowViewState.IdRef="BuildDataTable_2" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;MajorCurrency&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;MinorCurrency&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;BuyingOd&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;BuyingTt&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;SellingTtOd&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;CeilingRate&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;SvbRate&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;FloorRate&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;ExchangeDate&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Guid&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Version&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;AgvRate&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;  &lt;TableName&gt;&#xA;    &lt;MajorCurrency&gt;MajorCurrency&lt;/MajorCurrency&gt;&#xA;    &lt;MinorCurrency&gt;MinorCurrency&lt;/MinorCurrency&gt;&#xA;    &lt;BuyingOd&gt;BuyingOd&lt;/BuyingOd&gt;&#xA;    &lt;BuyingTt&gt;BuyingTt&lt;/BuyingTt&gt;&#xA;    &lt;SellingTtOd&gt;SellingTtOd&lt;/SellingTtOd&gt;&#xA;    &lt;CeilingRate&gt;CeilingRate&lt;/CeilingRate&gt;&#xA;    &lt;SvbRate&gt;SvbRate&lt;/SvbRate&gt;&#xA;    &lt;FloorRate&gt;FloorRate&lt;/FloorRate&gt;&#xA;    &lt;ExchangeDate&gt;ExchangeDate&lt;/ExchangeDate&gt;&#xA;    &lt;Guid&gt;Guid&lt;/Guid&gt;&#xA;    &lt;Version&gt;Version&lt;/Version&gt;&#xA;    &lt;AgvRate&gt;AgvRate&lt;/AgvRate&gt;&#xA;  &lt;/TableName&gt;&#xA;&lt;/NewDataSet&gt;">
          <ui:BuildDataTable.DataTable>
            <OutArgument x:TypeArguments="sd:DataTable">
              <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_34">headerDT</CSharpReference>
            </OutArgument>
          </ui:BuildDataTable.DataTable>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:BuildDataTable>
        <ui:GenerateDataTable ColumnSizes="{x:Null}" Positions="{x:Null}" CSVParsing="True" ColumnSeparators="|" DisplayName="Generate Data Table From Text" sap:VirtualizedContainerService.HintSize="572,201" sap2010:WorkflowViewState.IdRef="GenerateDataTable_4" NewLineSeparator="&#xA;">
          <ui:GenerateDataTable.DataTable>
            <OutArgument x:TypeArguments="sd:DataTable">
              <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_24">DataTable</CSharpReference>
            </OutArgument>
          </ui:GenerateDataTable.DataTable>
          <ui:GenerateDataTable.Input>
            <InArgument x:TypeArguments="x:String">
              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_76">output</CSharpValue>
            </InArgument>
          </ui:GenerateDataTable.Input>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:GenerateDataTable>
        <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="CeilingRate" DisplayName="Add CeilingRate Column" sap:VirtualizedContainerService.HintSize="572,186" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_2">
          <ui:AddDataColumn.DataTable>
            <InArgument x:TypeArguments="sd:DataTable">
              <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_94">DataTable</CSharpValue>
            </InArgument>
          </ui:AddDataColumn.DataTable>
          <ui:AddDataColumn.DefaultValue>
            <InArgument x:TypeArguments="x:Object">
              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_145">CeilingRate</CSharpValue>
            </InArgument>
          </ui:AddDataColumn.DefaultValue>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:AddDataColumn>
        <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="SvbRate" DisplayName="Add SvbRate Column" sap:VirtualizedContainerService.HintSize="572,186" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_10">
          <ui:AddDataColumn.DataTable>
            <InArgument x:TypeArguments="sd:DataTable">
              <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_146">DataTable</CSharpValue>
            </InArgument>
          </ui:AddDataColumn.DataTable>
          <ui:AddDataColumn.DefaultValue>
            <InArgument x:TypeArguments="x:Object">
              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_147">SvbRate</CSharpValue>
            </InArgument>
          </ui:AddDataColumn.DefaultValue>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:AddDataColumn>
        <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="FloorRate" DisplayName="Add FloorRate  Column" sap:VirtualizedContainerService.HintSize="572,186" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_3">
          <ui:AddDataColumn.DataTable>
            <InArgument x:TypeArguments="sd:DataTable">
              <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_96">DataTable</CSharpValue>
            </InArgument>
          </ui:AddDataColumn.DataTable>
          <ui:AddDataColumn.DefaultValue>
            <InArgument x:TypeArguments="x:Object">
              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_97">FloorRate</CSharpValue>
            </InArgument>
          </ui:AddDataColumn.DefaultValue>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:AddDataColumn>
        <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="ExchangeDate" DisplayName="Add Exchange Date Column" sap:VirtualizedContainerService.HintSize="572,186" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_4">
          <ui:AddDataColumn.DataTable>
            <InArgument x:TypeArguments="sd:DataTable">
              <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_98">DataTable</CSharpValue>
            </InArgument>
          </ui:AddDataColumn.DataTable>
          <ui:AddDataColumn.DefaultValue>
            <InArgument x:TypeArguments="x:Object">
              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_179">DateTime.Now.ToString("yyyy-MM-dd")/* Convert.ToDateTime(ExchangeDate).ToString("yyyy-MM-dd") */</CSharpValue>
            </InArgument>
          </ui:AddDataColumn.DefaultValue>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:AddDataColumn>
        <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="Guid" DisplayName="Add Data Column" sap:VirtualizedContainerService.HintSize="572,186" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_8">
          <ui:AddDataColumn.DataTable>
            <InArgument x:TypeArguments="sd:DataTable">
              <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_141">DataTable</CSharpValue>
            </InArgument>
          </ui:AddDataColumn.DataTable>
          <ui:AddDataColumn.DefaultValue>
            <InArgument x:TypeArguments="x:Object">
              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_142">guid</CSharpValue>
            </InArgument>
          </ui:AddDataColumn.DefaultValue>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:AddDataColumn>
        <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="Version" DisplayName="Add Version Column" sap:VirtualizedContainerService.HintSize="572,186" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_11">
          <ui:AddDataColumn.DataTable>
            <InArgument x:TypeArguments="sd:DataTable">
              <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_169">DataTable</CSharpValue>
            </InArgument>
          </ui:AddDataColumn.DataTable>
          <ui:AddDataColumn.DefaultValue>
            <InArgument x:TypeArguments="x:Object">
              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_176">Version</CSharpValue>
            </InArgument>
          </ui:AddDataColumn.DefaultValue>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:AddDataColumn>
        <Sequence DisplayName="2.0b. Calculate AgvRate" sap:VirtualizedContainerService.HintSize="572,624" sap2010:WorkflowViewState.IdRef="Sequence_32">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="AgvRate" DisplayName="Add Data Column" sap:VirtualizedContainerService.HintSize="510,186" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_9">
            <ui:AddDataColumn.DataTable>
              <InArgument x:TypeArguments="sd:DataTable">
                <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_144">DataTable</CSharpValue>
              </InArgument>
            </ui:AddDataColumn.DataTable>
          </ui:AddDataColumn>
          <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="510,287" sap2010:WorkflowViewState.IdRef="ForEachRow_3">
            <ui:ForEachRow.Body>
              <ActivityAction x:TypeArguments="sd:DataRow">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="476,170" sap2010:WorkflowViewState.IdRef="Sequence_33">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_12">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">
                        <CSharpReference x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpReference`1_44">CurrentRow["AgvRate"]</CSharpReference>
                      </OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">
                        <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_151">((float.Parse(CurrentRow[4].ToString()) + float.Parse(CurrentRow[3].ToString())) / 2)</CSharpValue>
                      </InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </ActivityAction>
            </ui:ForEachRow.Body>
            <ui:ForEachRow.DataTable>
              <InArgument x:TypeArguments="sd:DataTable">
                <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_135">DataTable</CSharpValue>
              </InArgument>
            </ui:ForEachRow.DataTable>
          </ui:ForEachRow>
        </Sequence>
      </Sequence>
      <Sequence DisplayName="2.1. Save Excel" sap:VirtualizedContainerService.HintSize="634,816" sap2010:WorkflowViewState.IdRef="Sequence_34">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="438,705" sap2010:WorkflowViewState.IdRef="TryCatch_4">
          <TryCatch.Try>
            <Sequence sap:VirtualizedContainerService.HintSize="376,477" sap2010:WorkflowViewState.IdRef="Sequence_30">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:WriteRange AddHeaders="False" DisplayName="Write Range Workbook" sap:VirtualizedContainerService.HintSize="334,116" sap2010:WorkflowViewState.IdRef="WriteRange_4" SheetName="Sheet1" StartingCell="A1">
                <ui:WriteRange.DataTable>
                  <InArgument x:TypeArguments="sd:DataTable">
                    <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_86">headerDT</CSharpValue>
                  </InArgument>
                </ui:WriteRange.DataTable>
                <ui:WriteRange.WorkbookPath>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_101">fileSavedPath</CSharpValue>
                  </InArgument>
                </ui:WriteRange.WorkbookPath>
              </ui:WriteRange>
              <ui:WriteRange AddHeaders="False" DisplayName="Write Range Workbook" sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="WriteRange_2" SheetName="Sheet1" StartingCell="A2">
                <ui:WriteRange.DataTable>
                  <InArgument x:TypeArguments="sd:DataTable">
                    <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_75">DataTable</CSharpValue>
                  </InArgument>
                </ui:WriteRange.DataTable>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:WriteRange.WorkbookPath>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_102">fileSavedPath</CSharpValue>
                  </InArgument>
                </ui:WriteRange.WorkbookPath>
              </ui:WriteRange>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_2">
                <ui:LogMessage.Message>
                  <InArgument x:TypeArguments="x:Object">
                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_117">"Saved excel successfully"</CSharpValue>
                  </InArgument>
                </ui:LogMessage.Message>
              </ui:LogMessage>
            </Sequence>
          </TryCatch.Try>
          <TryCatch.Catches>
            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_4">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ActivityAction x:TypeArguments="s:Exception">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                </ActivityAction.Argument>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ErrorHandle.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="ErrorHandle.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="errors">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_127">"Lưu file excel thất bại. Lỗi: " + exception.Message</CSharpValue>
                    </InArgument>
                    <InArgument x:TypeArguments="sc:Hashtable" x:Key="config">
                      <CSharpValue x:TypeArguments="sc:Hashtable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_126">config</CSharpValue>
                    </InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </ActivityAction>
            </Catch>
          </TryCatch.Catches>
        </TryCatch>
      </Sequence>
      <Sequence DisplayName="2.2. Save DB" sap:VirtualizedContainerService.HintSize="634,2087" sap2010:WorkflowViewState.IdRef="Sequence_20">
        <Sequence.Variables>
          <Variable x:TypeArguments="sd:DataTable" Name="dtExRateT1" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Run query" sap:VirtualizedContainerService.HintSize="526,89" sap2010:WorkflowViewState.IdRef="ExecuteQuery_2">
          <ui:ExecuteQuery.ConnectionString>
            <InArgument x:TypeArguments="x:String">
              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_180">strConnString</CSharpValue>
            </InArgument>
          </ui:ExecuteQuery.ConnectionString>
          <ui:ExecuteQuery.DataTable>
            <OutArgument x:TypeArguments="sd:DataTable">
              <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_51">dtExRateT1</CSharpReference>
            </OutArgument>
          </ui:ExecuteQuery.DataTable>
          <ui:ExecuteQuery.Parameters>
            <scg:Dictionary x:TypeArguments="x:String, Argument" />
          </ui:ExecuteQuery.Parameters>
          <ui:ExecuteQuery.ProviderName>
            <InArgument x:TypeArguments="x:String">
              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_208">strProvider</CSharpValue>
            </InArgument>
          </ui:ExecuteQuery.ProviderName>
          <ui:ExecuteQuery.Sql>
            <InArgument x:TypeArguments="x:String">
              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_192">"select 1 from MstCmmExchangeRate_T1 where ExchangeDate = cast(getdate() as date) and Version = '" + Version + "';"</CSharpValue>
            </InArgument>
          </ui:ExecuteQuery.Sql>
        </ui:ExecuteQuery>
        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="526,90" sap2010:WorkflowViewState.IdRef="WriteLine_4">
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_194">"Count Existing: " + dtExRateT1.RowCount().ToString()</CSharpValue>
          </InArgument>
        </WriteLine>
        <If DisplayName="Check if download New Version " sap:VirtualizedContainerService.HintSize="526,1717" sap2010:WorkflowViewState.IdRef="If_6">
          <If.Condition>
            <InArgument x:TypeArguments="x:Boolean">
              <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_212">dtExRateT1.RowCount() == 0</CSharpValue>
            </InArgument>
          </If.Condition>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <Sequence sap:VirtualizedContainerService.HintSize="492,1535" sap2010:WorkflowViewState.IdRef="Sequence_40">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="strBodyContent" />
                <Variable x:TypeArguments="sd:DataTable" Name="dtResults" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="450,635" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" InstanceCachePeriod="3000">
                <ui:ExcelApplicationScope.Body>
                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,485" sap2010:WorkflowViewState.IdRef="Sequence_21">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ExcelReadRange AddHeaders="True" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_2" SheetName="Sheet1">
                        <ui:ExcelReadRange.DataTable>
                          <OutArgument x:TypeArguments="sd:DataTable">
                            <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_39">DataTable</CSharpReference>
                          </OutArgument>
                        </ui:ExcelReadRange.DataTable>
                        <ui:ExcelReadRange.Range>
                          <InArgument x:TypeArguments="x:String">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                        </ui:ExcelReadRange.Range>
                      </ui:ExcelReadRange>
                      <ui:InsertDataTable AffectedRecords="{x:Null}" ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" DisplayName="Insert" sap:VirtualizedContainerService.HintSize="334,116" sap2010:WorkflowViewState.IdRef="InsertDataTable_1" TableName="MstCmmExchangeRate_T1">
                        <ui:InsertDataTable.ConnectionString>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_182">strConnString</CSharpValue>
                          </InArgument>
                        </ui:InsertDataTable.ConnectionString>
                        <ui:InsertDataTable.DataTable>
                          <InArgument x:TypeArguments="sd:DataTable">
                            <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_104">DataTable</CSharpValue>
                          </InArgument>
                        </ui:InsertDataTable.DataTable>
                        <ui:InsertDataTable.ProviderName>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_210">strProvider</CSharpValue>
                          </InArgument>
                        </ui:InsertDataTable.ProviderName>
                      </ui:InsertDataTable>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_3">
                        <ui:LogMessage.Message>
                          <InArgument x:TypeArguments="x:Object">
                            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_118">"Saved database successfully"</CSharpValue>
                          </InArgument>
                        </ui:LogMessage.Message>
                      </ui:LogMessage>
                    </Sequence>
                  </ActivityAction>
                </ui:ExcelApplicationScope.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ExcelApplicationScope.WorkbookPath>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_103">fileSavedPath</CSharpValue>
                  </InArgument>
                </ui:ExcelApplicationScope.WorkbookPath>
              </ui:ExcelApplicationScope>
              <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="450,52" sap2010:WorkflowViewState.IdRef="WriteLine_5">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_202">"Call XCHECK STORE " + guid.ToString()</CSharpValue>
                </InArgument>
              </WriteLine>
              <Sequence DisplayName="2.3. Call store" sap:VirtualizedContainerService.HintSize="450,81" sap2010:WorkflowViewState.IdRef="Sequence_31">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="488,428" sap2010:WorkflowViewState.IdRef="TryCatch_5">
                  <TryCatch.Try>
                    <Sequence sap:VirtualizedContainerService.HintSize="450,200" sap2010:WorkflowViewState.IdRef="Sequence_47">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ExecuteNonQuery AffectedRecords="{x:Null}" ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Run command" sap:VirtualizedContainerService.HintSize="388,89" sap2010:WorkflowViewState.IdRef="ExecuteNonQuery_1">
                        <ui:ExecuteNonQuery.ConnectionString>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_203">strConnString</CSharpValue>
                          </InArgument>
                        </ui:ExecuteNonQuery.ConnectionString>
                        <ui:ExecuteNonQuery.Parameters>
                          <scg:Dictionary x:TypeArguments="x:String, Argument" />
                        </ui:ExecuteNonQuery.Parameters>
                        <ui:ExecuteNonQuery.ProviderName>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_209">strProvider</CSharpValue>
                          </InArgument>
                        </ui:ExecuteNonQuery.ProviderName>
                        <ui:ExecuteNonQuery.Sql>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_207">"exec " + config["STORE_NAME"].ToString() + " '" + guid.ToString() + "'"</CSharpValue>
                          </InArgument>
                        </ui:ExecuteNonQuery.Sql>
                      </ui:ExecuteNonQuery>
                    </Sequence>
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="454,21" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="s:Exception">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                        </ActivityAction.Argument>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ErrorHandle.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="ErrorHandle.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="errors">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_131">"Call store thất bại. Lỗi: " + exception.Message</CSharpValue>
                            </InArgument>
                            <InArgument x:TypeArguments="sc:Hashtable" x:Key="config">
                              <CSharpValue x:TypeArguments="sc:Hashtable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_130">config</CSharpValue>
                            </InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                  <TryCatch.Finally>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_4">
                      <ui:LogMessage.Message>
                        <InArgument x:TypeArguments="x:Object">
                          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_153">"Called store successfully"</CSharpValue>
                        </InArgument>
                      </ui:LogMessage.Message>
                    </ui:LogMessage>
                  </TryCatch.Finally>
                </TryCatch>
              </Sequence>
              <ui:ReadRange Range="{x:Null}" AddHeaders="False" DisplayName="Read Range Workbook" sap:VirtualizedContainerService.HintSize="450,88" sap2010:WorkflowViewState.IdRef="ReadRange_1" PreserveFormat="True" SheetName="Sheet1">
                <ui:ReadRange.DataTable>
                  <OutArgument x:TypeArguments="sd:DataTable">
                    <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_54">dtResults</CSharpReference>
                  </OutArgument>
                </ui:ReadRange.DataTable>
                <ui:ReadRange.WorkbookPath>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_224">fileSavedPath</CSharpValue>
                  </InArgument>
                </ui:ReadRange.WorkbookPath>
              </ui:ReadRange>
              <ui:RemoveDataColumn Column="{x:Null}" ColumnName="{x:Null}" ColumnIndex="9" DisplayName="Remove Data Column" sap:VirtualizedContainerService.HintSize="450,52" sap2010:WorkflowViewState.IdRef="RemoveDataColumn_1">
                <ui:RemoveDataColumn.DataTable>
                  <InOutArgument x:TypeArguments="sd:DataTable">
                    <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_55">dtResults</CSharpReference>
                  </InOutArgument>
                </ui:RemoveDataColumn.DataTable>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:RemoveDataColumn>
              <umab:CreateHtmlContent DisplayName="Create HTML Content" sap:VirtualizedContainerService.HintSize="450,153" sap2010:WorkflowViewState.IdRef="CreateHtmlContent_1">
                <umab:CreateHtmlContent.HtmlContent>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_52">strBodyContent</CSharpReference>
                  </OutArgument>
                </umab:CreateHtmlContent.HtmlContent>
                <umab:CreateHtmlContent.HtmlContentArg>
                  <umabh:HtmlContentArgument FilePath=".data/HtmlContent0.html">
                    <umabh:HtmlContentArgument.RuntimeImages>
                      <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                    </umabh:HtmlContentArgument.RuntimeImages>
                    <umabh:HtmlContentArgument.ValueMappings>
                      <scg:List x:TypeArguments="umabh:HtmlValueMappingBase" Capacity="4">
                        <umabh:HtmlTextValueMapping Name="Username">
                          <umabh:HtmlTextValueMapping.Value>
                            <InArgument x:TypeArguments="x:Object">
                              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_221">"FIN"</CSharpValue>
                            </InArgument>
                          </umabh:HtmlTextValueMapping.Value>
                        </umabh:HtmlTextValueMapping>
                        <umabh:HtmlTableValueMapping Name="Results">
                          <umabh:HtmlTableValueMapping.Value>
                            <InArgument x:TypeArguments="sd:DataTable">
                              <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_225">dtResults</CSharpValue>
                            </InArgument>
                          </umabh:HtmlTableValueMapping.Value>
                        </umabh:HtmlTableValueMapping>
                      </scg:List>
                    </umabh:HtmlContentArgument.ValueMappings>
                  </umabh:HtmlContentArgument>
                </umab:CreateHtmlContent.HtmlContentArg>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </umab:CreateHtmlContent>
              <ui:SendOutlookMail Bcc="{x:Null}" ContinueOnError="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="450,146" sap2010:WorkflowViewState.IdRef="SendOutlookMail_1" Importance="Normal" IsBodyHtml="True" IsDraft="False" Sensitivity="Normal" Subject="[RPA.EXRATE.TOOL] Exchange Rate file download successfuly (from Citibank Website)">
                <ui:SendOutlookMail.Account>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_214">config["OUTLOOK_ACCOUNT"].ToString()</CSharpValue>
                  </InArgument>
                </ui:SendOutlookMail.Account>
                <ui:SendOutlookMail.Body>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_219">strBodyContent</CSharpValue>
                  </InArgument>
                </ui:SendOutlookMail.Body>
                <ui:SendOutlookMail.Cc>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_216">config["ADMIN_EMAIL"].ToString()</CSharpValue>
                  </InArgument>
                </ui:SendOutlookMail.Cc>
                <ui:SendOutlookMail.Files>
                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_217">fileDownloadedPath</CSharpValue>
                    </InArgument>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_218">fileSavedPath</CSharpValue>
                    </InArgument>
                  </scg:List>
                </ui:SendOutlookMail.Files>
                <ui:SendOutlookMail.To>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_215">config["USER_EMAIL"].ToString()</CSharpValue>
                  </InArgument>
                </ui:SendOutlookMail.To>
              </ui:SendOutlookMail>
            </Sequence>
          </If.Then>
          <If.Else>
            <Sequence sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_41">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Sequence>
          </If.Else>
        </If>
      </Sequence>
    </Sequence>
  </Sequence>
</Activity>