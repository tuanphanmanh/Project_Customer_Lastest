@Html.DevExpress().GridView(settings =>
{
    settings.Name = "gvDL_Time" + Model.SUPPLIER_ID;
    settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
    settings.KeyFieldName = "ID";
    settings.SettingsPager.PageSize = 10;
    settings.SettingsPager.NumericButtonCount = 10;
    settings.SettingsPager.AllButton.Visible = true;
    settings.SettingsPager.AlwaysShowPager = true;
    settings.SettingsPager.PageSizeItemSettings.Visible = true;
    settings.SettingsPager.PageSizeItemSettings.Items = new string[] { "10", "20", "50" };

    settings.Settings.ShowFilterRow = true;
    settings.Settings.ShowFilterRowMenu = true;
    settings.CallbackRouteValues = new { Controller = "TB_M_SUPPLIER_INFO", Action = "SUPPLIER_DL_TIME_GridCallback", SUPPLIER_ID = Model.SUPPLIER_ID };

    //settings.Settings.HorizontalScrollBarMode = DevExpress.Web.ScrollBarMode.Visible;
    settings.Styles.Header.Font.Bold = true;
    settings.Styles.Header.Font.Size = 7;
    settings.Styles.Header.ForeColor = System.Drawing.Color.Black;
    settings.Styles.Header.Paddings.Padding = 3;
    settings.Styles.Header.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left;
    settings.Styles.Header.BackColor = System.Drawing.Color.PowderBlue;
    settings.Styles.Cell.Font.Size = 8;
    settings.Columns.Add(c =>
    {
        c.Caption = "";
        c.Width = System.Web.UI.WebControls.Unit.Pixel(70);
        c.CellStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Center;
        c.SetDataItemTemplateContent(
            content =>
            {
                System.Text.StringBuilder strBuilder = new System.Text.StringBuilder();
                if (Html.Toyota().Authorization.IsAuthorizedToAccessFeature
                   (Html.Toyota().Page.ControllerName.ToString(), "Edit"))
                {
                    strBuilder.Append(string.Concat("<a class='btnCollectionEdit' href='#edit' data-id='", DataBinder.Eval(content.DataItem, "ID"), "' onclick='return DL_TimeEdit(this)' title='Edit'><i class='fa fa-pencil'></i></a>"));
                }
                if (Html.Toyota().Authorization.IsAuthorizedToAccessFeature
                   (Html.Toyota().Page.ControllerName.ToString(), "Delete"))
                {
                    strBuilder.Append(string.Concat(" <a class='btnCollectionDelete' href='#delete' data-id='", DataBinder.Eval(content.DataItem, "ID"), "' onclick='return DL_TimeDelete(this)'  title='Delete'><i class='fa fa-trash-o'></i></a>"));
                }
                Html.ViewContext.Writer.Write(strBuilder.ToString());
            });
    });
    
    settings.Columns.Add(c =>
    {
        c.Caption = "No.";
        c.FieldName = "ROW_NO";
    }
    );
    
    settings.Columns.Add(c =>
        {
            c.Caption = "ORDRE SEQ.";
            c.FieldName = "DELIVERY_SEQ";
        }
    );
    settings.Columns.Add(c =>
        {
            c.Caption = "ORDER TIME";
            c.FieldName = "DELIVERY_TIME";
        }
    );
    settings.Columns.Add(c =>
    {
        c.Caption = "IS ACTIVE?";
        c.FieldName = "IS_ACTIVE";
        c.SetDataItemTemplateContent(cc =>
        {
            Html.DevExpress().CheckBox(checkboxSettings =>
            {
                checkboxSettings.Name = "T_IS_ACTIVE_" + cc.KeyValue.ToString();
                checkboxSettings.Checked = Convert.ToString(DataBinder.Eval(cc.DataItem, "IS_ACTIVE")) == "Y" ? true : false;
                checkboxSettings.Properties.ClientSideEvents.CheckedChanged = "function() { return false; }";
                checkboxSettings.ClientEnabled = false;
            }).Render();
        });
    });

}).Bind(LSP.Models.TB_M_SUPPLIER_DL_TIME.TB_M_SUPPLIER_DL_TIMEProvider.Instance.TB_M_SUPPLIER_DL_TIME_SearchBySUPPLIER_ID(Model.SUPPLIER_ID)).GetHtml()