@Html.DevExpress().GridView(settings =>
{
    settings.Name = "gvList";
    settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
    settings.KeyFieldName = "ID";
    settings.SettingsPager.PageSize = LSP.Models.Common.PageSize(); //10
    settings.SettingsPager.NumericButtonCount = 10;
    settings.SettingsPager.AllButton.Visible = true;
    settings.SettingsPager.AlwaysShowPager = true;

    settings.SettingsPager.PageSizeItemSettings.Visible = true;
    settings.SettingsPager.PageSizeItemSettings.Items = LSP.Models.Common.PageSizeItemSettings(); //new string[] { "10", "20", "50" };
    settings.Settings.ShowFilterRow = true;
    settings.Settings.ShowFilterRowMenu = true;

    settings.Settings.HorizontalScrollBarMode = DevExpress.Web.ScrollBarMode.Visible;
    settings.Styles.Header.Font.Bold = true;
    settings.Styles.Header.Font.Size = 7;
    settings.Styles.Header.ForeColor = System.Drawing.Color.White;
    settings.Styles.Header.Paddings.Padding = 3;
    settings.Styles.Header.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Center;
    settings.Styles.Header.BackColor = System.Drawing.Color.Black;
    settings.Styles.Cell.Font.Size = 8;
	
    settings.CallbackRouteValues = new { Controller = "TB_R_PART_HIKIATE_STOCK_STD", Action = "GridCallback" };
	 
	//Export
    settings.SettingsExport.EnableClientSideExportAPI = true;
    settings.SettingsExport.ExcelExportMode = DevExpress.Export.ExportType.WYSIWYG;
    settings.SettingsExport.BeforeExport = (sender, e) =>
    {
        MVCxGridView gridView = sender as MVCxGridView;
        if (sender == null)
            return;
        gridView.Columns["Op."].Visible = false;
    };
	//Toolbar
    settings.Toolbars.Add(toolbar =>
    {
                toolbar.Enabled = true;
                toolbar.EnableAdaptivity = true;
                toolbar.Position = GridToolbarPosition.Top;
                toolbar.ItemAlign = GridToolbarItemAlign.Left;

                toolbar.Items.Add(i =>
                {
                    i.BeginGroup = true;
                    i.SetTemplateContent(c =>
                    {
                        Html.DevExpress().ButtonEdit(s =>
                        {
                            s.Name = "search";
                            s.Properties.NullText = "Search inline...";
                            s.Properties.Buttons
                                .Add()
                                .Image.IconID = DevExpress.Web.ASPxThemes.IconID.FindFind16x16gray;
                        }).Render();
                    });
                }); 
                toolbar.Items.Add(i =>
                {
                    i.BeginGroup = true;
                    i.SetTemplateContent(c =>
                    {
                        @Html.DevExpress().Button(s =>
                        {
                            s.Name = "btnExportXls";
                            s.ClientSideEvents.Click = "function(s, e) {gvList.ExportTo(ASPxClientGridViewExportFormat.Xls);}";
                            s.Text = "Export to Xls";
                            s.Images.Image.IconID = DevExpress.Web.ASPxThemes.IconID.ExportExporttoxls16x16;
                        }).GetHtml();
                    });
                }); 
                //toolbar.Items.Add(GridViewToolbarCommand.ExportToXlsx);
                toolbar.Items.Add(GridViewToolbarCommand.ShowFilterEditor);
                toolbar.Items.Add(GridViewToolbarCommand.ClearFilter);
                toolbar.Items.Add(GridViewToolbarCommand.ShowGroupPanel);

                toolbar.Items.Add(i =>
                {
                    i.BeginGroup = true;
                    i.SetTemplateContent(c =>
                    {
                        @Html.DevExpress().Button(s =>
                        {
                            s.Name = "Help";
                            s.ClientSideEvents.Init = "function(s, e) { }";
                            s.ClientSideEvents.Click = "function(s, e) { }";
                            s.Text = "Help";
                            s.Images.Image.IconID = DevExpress.Web.ASPxThemes.IconID.HelpIndex16x16gray;
                        }).GetHtml();
                    });
                  });
    });
	//For Search panel
    settings.SettingsSearchPanel.CustomEditorName = "search";
		
	
	settings.Columns.Add(c =>
	{
		c.Caption = "Op.";
		c.Width = System.Web.UI.WebControls.Unit.Pixel(70);
		c.CellStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Center;
		c.SetDataItemTemplateContent(
			content =>
			{
				System.Text.StringBuilder strBuilder = new System.Text.StringBuilder();
				if (Html.Toyota().Authorization.IsAuthorizedToAccessFeature
				   (Html.Toyota().Page.ControllerName.ToString(), "Edit"))
				{
					strBuilder.Append(string.Concat("<a class='btnCollectionEdit' href='#edit' data-id='", DataBinder.Eval(content.DataItem, "ID"), "' onclick='return Edit(this)' title='Edit'><i class='fa fa-edit'></i></a>"));
				}
				if (Html.Toyota().Authorization.IsAuthorizedToAccessFeature
				   (Html.Toyota().Page.ControllerName.ToString(), "Delete"))
				{
					strBuilder.Append(string.Concat(" <a class='btnCollectionDelete' href='#delete' data-id='", DataBinder.Eval(content.DataItem, "ID"), "' onclick='return Delete(this)'  title='Delete'><i class='fa fa-trash-o'></i></a>"));
				}
				Html.ViewContext.Writer.Write(strBuilder.ToString());
			});
		c.FixedStyle = GridViewColumnFixedStyle.Left;
        c.Width = 70;
	});
	
	
            settings.Columns.Add(c =>
				{
					c.Caption = "ID";
					c.FieldName = "ID";
				}
			);
            settings.Columns.Add(c =>
				{
					c.Caption = "PART ID";
					c.FieldName = "PART_ID";
				}
			);
            settings.Columns.Add(c =>
				{
					c.Caption = "MIN STOCK";
					c.FieldName = "MIN_STOCK";
				}
			);
            settings.Columns.Add(c =>
				{
					c.Caption = "MAX STOCK";
					c.FieldName = "MAX_STOCK";
				}
			);
			settings.Columns.Add(c =>
				{
					c.Caption = "TC FROM";
					c.FieldName = "TC_FROM";
					c.PropertiesEdit.DisplayFormatString = "dd/MM/yyyy";
				}
			);
			settings.Columns.Add(c =>
				{
					c.Caption = "TC TO";
					c.FieldName = "TC_TO";
					c.PropertiesEdit.DisplayFormatString = "dd/MM/yyyy";
				}
			);
            settings.Columns.Add(c =>
				{
					c.Caption = "IS ACTIVE";
					c.FieldName = "IS_ACTIVE";
				}
			);
            settings.Columns.Add(c =>
				{
					c.Caption = "CREATED BY";
					c.FieldName = "CREATED_BY";
				}
			);
			settings.Columns.Add(c =>
				{
					c.Caption = "CREATED DATE";
					c.FieldName = "CREATED_DATE";
					c.PropertiesEdit.DisplayFormatString = "dd/MM/yyyy";
				}
			);
            settings.Columns.Add(c =>
				{
					c.Caption = "UPDATED BY";
					c.FieldName = "UPDATED_BY";
				}
			);
			settings.Columns.Add(c =>
				{
					c.Caption = "UPDATED DATE";
					c.FieldName = "UPDATED_DATE";
					c.PropertiesEdit.DisplayFormatString = "dd/MM/yyyy";
				}
			);
    
}).Bind(LSP.Models.TB_R_PART_HIKIATE_STOCK_STD.TB_R_PART_HIKIATE_STOCK_STDProvider.Instance.TB_R_PART_HIKIATE_STOCK_STD_Search(Model ?? new LSP.Models.TB_R_PART_HIKIATE_STOCK_STD.TB_R_PART_HIKIATE_STOCK_STDInfo())).GetHtml()

