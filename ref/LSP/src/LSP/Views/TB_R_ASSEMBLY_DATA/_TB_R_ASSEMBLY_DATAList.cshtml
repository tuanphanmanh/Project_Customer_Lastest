@Html.DevExpress().GridView(settings =>
{
    settings.Name = "gvList";
    settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
    settings.KeyFieldName = "ID";
    settings.SettingsPager.PageSize = 25;
    settings.SettingsPager.NumericButtonCount = 10;
    settings.SettingsPager.AllButton.Visible = true;
    settings.SettingsPager.AlwaysShowPager = true;
    settings.SettingsPager.PageSizeItemSettings.Visible = true;
    settings.SettingsPager.PageSizeItemSettings.Items = new string[] { "30", "50", "100" };

    settings.Settings.ShowFilterRow = true;
    settings.Settings.ShowFilterRowMenu = true;
    settings.CallbackRouteValues = new { Controller = "TB_R_ASSEMBLY_DATA", Action = "GridCallback" };

    settings.Settings.HorizontalScrollBarMode = DevExpress.Web.ScrollBarMode.Visible;
    settings.Styles.Header.Font.Bold = true;
    settings.Styles.Header.Font.Size = 7;
    settings.Styles.Header.ForeColor = System.Drawing.Color.White;
    settings.Styles.Header.Paddings.Padding = 3;
    settings.Styles.Header.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left;
    settings.Styles.Header.BackColor = System.Drawing.Color.Black;
    settings.Styles.Cell.Font.Size = 8;
    
    //settings.Columns.Add(c =>
    //{
    //    c.Caption = "";
    //    c.Width = System.Web.UI.WebControls.Unit.Pixel(70);
    //    c.CellStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Center;
    //    c.SetDataItemTemplateContent(
    //        content =>
    //        {
    //            System.Text.StringBuilder strBuilder = new System.Text.StringBuilder();
    //            if (Html.Toyota().Authorization.IsAuthorizedToAccessFeature
    //               (Html.Toyota().Page.ControllerName.ToString(), "Edit"))
    //            {
    //                strBuilder.Append(string.Concat("<a class='btnCollectionEdit' href='#edit' data-id='", DataBinder.Eval(content.DataItem, "ID"), "' onclick='return Edit(this)' title='Edit'><i class='fa fa-pencil'></i></a>"));
    //            }
    //            if (Html.Toyota().Authorization.IsAuthorizedToAccessFeature
    //               (Html.Toyota().Page.ControllerName.ToString(), "Delete"))
    //            {
    //                strBuilder.Append(string.Concat(" <a class='btnCollectionDelete' href='#delete' data-id='", DataBinder.Eval(content.DataItem, "ID"), "' onclick='return Delete(this)'  title='Delete'><i class='fa fa-trash-o'></i></a>"));
    //            }
    //            Html.ViewContext.Writer.Write(strBuilder.ToString());
    //        });
    //});
    settings.Columns.Add(c =>
        {
            c.Caption = "LINE";
            c.FieldName = "LINE";
        }
    );
    settings.Columns.Add(c =>
        {
            c.Caption = "PROCESS";
            c.FieldName = "PROCESS";
        }
    );
    settings.Columns.Add(c =>
        {
            c.Caption = "MODEL";
            c.FieldName = "MODEL";
        }
    );
    settings.Columns.Add(c =>
        {
            c.Caption = "BODY NO";
            c.FieldName = "BODY_NO";
        }
    );
    settings.Columns.Add(c =>
        {
            c.Caption = "SEQ NO";
            c.FieldName = "SEQ_NO";
        }
    );
    settings.Columns.Add(c =>
        {
            c.Caption = "GRADE";
            c.FieldName = "GRADE";
        }
    );
    settings.Columns.Add(c =>
        {
            c.Caption = "LOT NO";
            c.FieldName = "LOT_NO";
        }
    );
    settings.Columns.Add(c =>
        {
            c.Caption = "NO IN LOT";
            c.FieldName = "NO_IN_LOT";
        }
    );
    settings.Columns.Add(c =>
        {
            c.Caption = "COLOR";
            c.FieldName = "COLOR";
        }
    );
    settings.Columns.Add(c =>
        {
            c.Caption = "WORKING DATE";
            c.FieldName = "WORKING_DATE";
            c.PropertiesEdit.DisplayFormatString = "dd/MM/yyyy";
        }
    );
    settings.Columns.Add(c =>
        {
            c.Caption = "NO IN DATE";
            c.FieldName = "NO_IN_DATE";
        }
    );
    settings.Columns.Add(c =>
        {
            c.Caption = "A IN DATE PLAN";
            c.FieldName = "A_IN_DATE_PLAN";
            c.PropertiesEdit.DisplayFormatString = "dd/MM/yyyy";
        }
    );
    settings.Columns.Add(c =>
        {
            c.Caption = "A IN TIME PLAN";
            c.FieldName = "A_IN_TIME_PLAN";
        }
    );
    settings.Columns.Add(c =>
        {
            c.Caption = "A IN DATE ACTUAL";
            c.FieldName = "A_IN_DATE_ACTUAL";
            c.PropertiesEdit.DisplayFormatString = "dd/MM/yyyy";
        }
    );
    settings.Columns.Add(c =>
        {
            c.Caption = "A IN TIME ACTUAL";
            c.FieldName = "A_IN_TIME_ACTUAL";
        }
    );

}).Bind(LSP.Models.TB_R_ASSEMBLY_DATA.TB_R_ASSEMBLY_DATAProvider.Instance.TB_R_ASSEMBLY_DATA_Search(Model ?? new LSP.Models.TB_R_ASSEMBLY_DATA.TB_R_ASSEMBLY_DATAInfo())).GetHtml()

