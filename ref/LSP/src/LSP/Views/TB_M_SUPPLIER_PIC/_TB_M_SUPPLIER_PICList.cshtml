@Html.DevExpress().GridView(settings =>
{
    settings.Name = "gvList";
    settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
    settings.KeyFieldName = "ID";
    settings.SettingsPager.PageSize = LSP.Models.Common.PageSize_M(); //10
    settings.SettingsPager.NumericButtonCount = 10;
    settings.SettingsPager.AllButton.Visible = true;
    settings.SettingsPager.AlwaysShowPager = true;
    settings.SettingsPager.PageSizeItemSettings.Visible = true;
    settings.SettingsPager.PageSizeItemSettings.Items = LSP.Models.Common.PageSizeItemSettings(); //new string[] { "10", "20", "50" };

    settings.Settings.ShowFilterRow = true;
    settings.Settings.ShowFilterRowMenu = true;
    settings.CallbackRouteValues = new { Controller = "TB_M_SUPPLIER_PIC", Action = "GridCallback" };

    //settings.Settings.HorizontalScrollBarMode = DevExpress.Web.ScrollBarMode.Visible;
    settings.Styles.Header.Font.Bold = true;
    settings.Styles.Header.Font.Size = 7;
    settings.Styles.Header.ForeColor = System.Drawing.Color.White;
    settings.Styles.Header.Paddings.Padding = 3;
    settings.Styles.Header.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left;
    settings.Styles.Header.BackColor = System.Drawing.Color.Black;
    settings.Styles.Cell.Font.Size = 8;

     //Export
    settings.SettingsExport.EnableClientSideExportAPI = true;
    settings.SettingsExport.ExcelExportMode = DevExpress.Export.ExportType.WYSIWYG;
    settings.SettingsExport.BeforeExport = (sender, e) =>
    {
        MVCxGridView gridView = sender as MVCxGridView;
        if (sender == null)
            return;
        gridView.Columns["Op."].Visible = false;
    };

    //Toolbar
    settings.Toolbars.Add(toolbar =>
    {
        toolbar.Enabled = true;
        toolbar.EnableAdaptivity = true;
        toolbar.Position = GridToolbarPosition.Top;
        toolbar.ItemAlign = GridToolbarItemAlign.Left;

        toolbar.Items.Add(i =>
        {
            i.BeginGroup = true;
            i.SetTemplateContent(c =>
            {
                Html.DevExpress().ButtonEdit(s =>
                {
                    s.Name = "search";
                    s.Properties.NullText = "Search inline...";
                    s.Properties.Buttons
                        .Add()
                        .Image.IconID = DevExpress.Web.ASPxThemes.IconID.FindFind16x16gray;
                }).Render();
            });
        });


        toolbar.Items.Add(i =>
        {
            i.BeginGroup = true;
            i.SetTemplateContent(c =>
            {
                @Html.DevExpress().Button(s =>
                {
                    s.Name = "btnExportXls";
                    s.ClientSideEvents.Click = "function(s, e) {gvList.ExportTo(ASPxClientGridViewExportFormat.Xls);}";
                    s.Text = "Export to Xls";
                    s.Images.Image.IconID = DevExpress.Web.ASPxThemes.IconID.ExportExporttoxls16x16;
                }).GetHtml();
            });
        });

        toolbar.Items.Add(i =>
        {
            i.BeginGroup = true;
            i.SetTemplateContent(c =>
            {
                @Html.DevExpress().Button(s =>
                {
                    s.Name = "Help";
                    s.ClientSideEvents.Init = "function(s, e) { }";
                    s.ClientSideEvents.Click = "function(s, e) { }";
                    s.Text = "Help";
                    s.Images.Image.IconID = DevExpress.Web.ASPxThemes.IconID.HelpIndex16x16gray;
                }).GetHtml();
            });
        });


    });
    //For Search panel
    settings.SettingsSearchPanel.CustomEditorName = "search";
    
    settings.Columns.Add(c =>
    {
        c.Caption = "Op.";
        c.Width = System.Web.UI.WebControls.Unit.Pixel(70);
        c.CellStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Center;
        c.SetDataItemTemplateContent(
            content =>
            {
                System.Text.StringBuilder strBuilder = new System.Text.StringBuilder();
                if (Html.Toyota().Authorization.IsAuthorizedToAccessFeature
                   (Html.Toyota().Page.ControllerName.ToString(), "Edit"))
                {
                    strBuilder.Append(string.Concat("<a class='btnCollectionEdit' href='#edit' data-id='", DataBinder.Eval(content.DataItem, "ID"), "' onclick='return Edit(this)' title='Edit'><i class='fa fa-pencil'></i></a>"));
                }
                if (Html.Toyota().Authorization.IsAuthorizedToAccessFeature
                   (Html.Toyota().Page.ControllerName.ToString(), "Delete"))
                {
                    strBuilder.Append(string.Concat(" <a class='btnCollectionDelete' href='#delete' data-id='", DataBinder.Eval(content.DataItem, "ID"), "' onclick='return Delete(this)'  title='Delete'><i class='fa fa-trash-o'></i></a>"));
                }
                Html.ViewContext.Writer.Write(strBuilder.ToString());
            });
    });
    settings.Columns.Add(c =>
    {
        c.Caption = "No.";
        c.FieldName = "ROW_NO";
        c.Width = 60;
    });
    settings.Columns.Add(c =>
        {
            c.Caption = "SUPPLIER CODE";
            c.FieldName = "SUPPLIER_CODE";
            c.Width = 90;
        });
    settings.Columns.Add(c =>
    {
        c.Caption = "SUPPLIER NAME";
        c.FieldName = "SUPPLIER_NAME";
        c.Width = 90;
    });
    settings.Columns.Add(c =>
        {
            c.Caption = "PIC NAME";
            c.FieldName = "PIC_NAME";
        }
    );
    settings.Columns.Add(c =>
        {
            c.Caption = "PIC TELEPHONE";
            c.FieldName = "PIC_TELEPHONE";
        }
    );
    settings.Columns.Add(c =>
        {
            c.Caption = "PIC EMAIL";
            c.FieldName = "PIC_EMAIL";
        }
    );
    
    settings.Columns.Add(c =>
    {
        c.Caption = "IS SEND EMAIL?";
        c.FieldName = "IS_SEND_EMAIL";
        c.SetDataItemTemplateContent(cc =>
        {
            Html.DevExpress().CheckBox(checkboxSettings =>
            {
                checkboxSettings.Name = "_IS_SEND_EMAIL_" + Convert.ToString(DataBinder.Eval(cc.DataItem, "ID"));
                checkboxSettings.Checked = Convert.ToString(DataBinder.Eval(cc.DataItem, "IS_SEND_EMAIL")) == "Y" ? true : false;
                checkboxSettings.Properties.ClientSideEvents.CheckedChanged = "function() { return false; }";
                checkboxSettings.ClientEnabled = false;
            }).Render();
        });
    });
    
    settings.Columns.Add(c =>
    {
        c.Caption = "IS MAIN PIC?";
        c.FieldName = "IS_MAIN_PIC";
        c.SetDataItemTemplateContent(cc =>
        {
            Html.DevExpress().CheckBox(checkboxSettings =>
            {
                checkboxSettings.Name = "_IS_MAIN_PIC_" + Convert.ToString(DataBinder.Eval(cc.DataItem, "ID"));
                checkboxSettings.Checked = Convert.ToString(DataBinder.Eval(cc.DataItem, "IS_MAIN_PIC")) == "Y" ? true : false;
                checkboxSettings.Properties.ClientSideEvents.CheckedChanged = "function() { return false; }";
                checkboxSettings.ClientEnabled = false;
            }).Render();
        });
    });
    settings.Columns.Add(c =>
    {
        c.Caption = "IS ACTIVE?";
        c.FieldName = "IS_ACTIVE";
        c.SetDataItemTemplateContent(cc =>
        {
            Html.DevExpress().CheckBox(checkboxSettings =>
            {
                checkboxSettings.Name = "_IS_ACTIVE_" + Convert.ToString(DataBinder.Eval(cc.DataItem, "ID"));
                checkboxSettings.Checked = Convert.ToString(DataBinder.Eval(cc.DataItem, "IS_ACTIVE")) == "Y" ? true : false;
                checkboxSettings.Properties.ClientSideEvents.CheckedChanged = "function() { return false; }";
                checkboxSettings.ClientEnabled = false;
            }).Render();
        });
    });

    settings.Columns.Add(c =>
    {
        c.Caption = "UPDATED BY";
        c.FieldName = "UPDATED_BY";
        c.HeaderStyle.Wrap = DefaultBoolean.True;
        c.EditFormSettings.Visible = DefaultBoolean.False;
        c.Width = 90;
    });

    settings.Columns.Add(c =>
    {
        c.Caption = "UPDATED DATE";
        c.FieldName = "UPDATED_DATE";
        c.Width = 100;
        c.HeaderStyle.Wrap = DefaultBoolean.True;
        c.EditFormSettings.Visible = DefaultBoolean.False;
        c.PropertiesEdit.DisplayFormatString = "dd/MM/yy HH:mm";
    });
    
}).Bind(LSP.Models.TB_M_SUPPLIER_PIC.TB_M_SUPPLIER_PICProvider.Instance.TB_M_SUPPLIER_PIC_Search_V2(Model ?? new LSP.Models.TB_M_SUPPLIER_PIC.TB_M_SUPPLIER_PICInfo())).GetHtml()
