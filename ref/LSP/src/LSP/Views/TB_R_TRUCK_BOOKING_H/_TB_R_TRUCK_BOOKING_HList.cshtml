@using LSP.Models
@Html.DevExpress().GridView(settings =>
{
    settings.Name = "gvList";
    settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
    settings.KeyFieldName = "ID";
    settings.SettingsPager.PageSize = LSP.Models.Common.PageSize(); //10
    settings.SettingsPager.NumericButtonCount = 10;
    settings.SettingsPager.AllButton.Visible = true;
    settings.SettingsPager.AlwaysShowPager = true;

    settings.SettingsPager.PageSizeItemSettings.Visible = true;
    settings.SettingsPager.PageSizeItemSettings.Items = Common.PageSizeItemSettings(); //new string[] { "10", "20", "50" };
    settings.Settings.ShowFilterRow = true;
    settings.Settings.ShowFilterRowMenu = true;
    settings.CallbackRouteValues = new { Controller = "TB_R_TRUCK_BOOKING_H", Action = "GridCallback" };
    
    settings.Styles.Header.Font.Bold = true;
    settings.Styles.Header.Font.Size = 7;
    settings.Styles.Header.ForeColor = System.Drawing.Color.White;
    settings.Styles.Header.Paddings.Padding = 3;
    settings.Styles.Header.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left;
    settings.Styles.Header.BackColor = System.Drawing.Color.Black;
    settings.Styles.Cell.Font.Size = 8;
    
    settings.SettingsBehavior.AllowFocusedRow = true;
    settings.Styles.FocusedRow.BackColor = System.Drawing.Color.LightGray;
    settings.Styles.Row.ForeColor = System.Drawing.Color.Black;
    
    settings.Columns.Add(c =>
    {
        c.Caption = "Op.";
        c.Width = System.Web.UI.WebControls.Unit.Pixel(90);
        c.CellStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Center;
        c.SetDataItemTemplateContent(content =>
        {
            System.Text.StringBuilder strBuilder = new System.Text.StringBuilder();
            strBuilder.Append(string.Concat("<a class='btnCollectionEdit' href='#edit' data-id='", DataBinder.Eval(content.DataItem, "id"), "' onclick='return Edit(this)' title='Edit'><i class='fa fa-pencil'></i></a>"));
            strBuilder.Append(string.Concat(" | <a class='btnCollectionDelete' href='#delete' data-id='", DataBinder.Eval(content.DataItem, "id"), "' onclick='return Delete(this)' title='Delete'><i class='fa fa-trash-o'></i></a>"));
            Html.ViewContext.Writer.Write(strBuilder.ToString());
        }
        );
    }
    );

    settings.Columns.Add(c =>
        {
            c.Caption = "No.";
            c.FieldName = "Row_No";
            c.Width = 60;
        }
    );
    settings.Columns.Add(c =>
    {
        c.Caption = "BOOKING ID";
        c.FieldName = "ID";
        c.Width = 70;
        c.HeaderStyle.Wrap = DefaultBoolean.True;
    }
    );
    
    settings.Columns.Add(c =>
    {
        c.Caption = "DOCK";
        c.FieldName = "DOCK";
        c.Width = 50;
    }
    );
    
    settings.Columns.Add(c =>
        {
            c.Caption = "TRUCK";
            c.FieldName = "TRUCK";
        }
    );
    
    settings.Columns.Add(c =>
        {
            c.Caption = "SUPPLIERS";
            c.FieldName = "SUPPLIERS";
            c.Width = 140;
        }
    );
    
    settings.Columns.Add(c =>
        {
            c.Caption = "TRIP NO";
            c.FieldName = "TRIP_NO";
            c.HeaderStyle.Wrap = DefaultBoolean.True;
            c.Width = 50;
        }
    );
       
    settings.Columns.Add(c =>
        {
            c.Caption = "ETA REQUEST";
            c.FieldName = "ETA_REQUEST";
            c.PropertiesEdit.DisplayFormatString = "HH:mm:ss";
        }
    );
    
    settings.Columns.Add(c =>
        {
            c.Caption = "ETD REQUEST";
            c.FieldName = "ETD_REQUEST";
            c.PropertiesEdit.DisplayFormatString = "HH:mm:ss";
        }
    );
            
    settings.Columns.Add(c =>
        {
            c.Caption = "PATH";
            c.FieldName = "PATH";
        }
    );
    settings.Columns.Add(c =>
        {
            c.Caption = "TRANSPORTER ABBR";
            c.FieldName = "TRANSPORTER_ABBR";
        }
    );

    settings.Columns.Add(c =>
    {
        c.Caption = "CREATED DATE";
        c.FieldName = "CREATED_DATE";
        c.PropertiesEdit.DisplayFormatString = "dd/MM/yyyy HH:mm:ss";
        c.HeaderStyle.Wrap = DefaultBoolean.True;
    }
    );
    
    settings.Columns.Add(c =>
    {
        c.Caption = "IS ACTIVE?";
        c.FieldName = "IS_ACTIVE";
        c.SetDataItemTemplateContent(cc =>
        {
            Html.DevExpress().CheckBox(checkboxSettings =>
            {
                checkboxSettings.Name = "IS_ACTIVE_" + cc.KeyValue.ToString();
                checkboxSettings.Checked = Convert.ToString(DataBinder.Eval(cc.DataItem, "IS_ACTIVE")) == "Y" ? true : false;
                checkboxSettings.Properties.ClientSideEvents.CheckedChanged = "function() { return false; }";
                checkboxSettings.ClientEnabled = false;
            }).Render();
        });
    }
    );

    //BOOKING DETAILS
    settings.SettingsDetail.AllowOnlyOneMasterRowExpanded = true;
    settings.SettingsDetail.ShowDetailRow = true;
    settings.SetDetailRowTemplateContent(c =>
    {
        ViewContext.Writer.Write(
            "<b>BOOKING DETAILS:</b> " +
        string.Concat("<a class='btnCollectionNew AssignColor' href='#editBOOKING_DETAILS' data-id='", DataBinder.Eval(c.DataItem, "ID"),
                "' onclick='return BOOKING_DETAILS_New(this)' title='Assign TRUCK BOOKING DETAILS' >Assign BOOKING DETAILS</a>",

                "<div class='clear'></div>"));

        Html.RenderAction("BOOKING_D_GridCallback",
                new LSP.Models.TB_R_TRUCK_BOOKING_D.TB_R_TRUCK_BOOKING_DInfo() { BOOKING_H_ID = long.Parse(DataBinder.Eval(c.DataItem, "ID").ToString()) });
    });
    settings.PreRender = (sender, e) =>
    {
        ((MVCxGridView)sender).DetailRows.ExpandRow(-1);
    };

}).Bind(LSP.Models.TB_R_TRUCK_BOOKING_H.TB_R_TRUCK_BOOKING_HProvider.Instance.TB_R_TRUCK_BOOKING_H_Search(Model ?? new LSP.Models.TB_R_TRUCK_BOOKING_H.TB_R_TRUCK_BOOKING_HInfo())).GetHtml()



