@*
---Phần Edit form, CssClass Validate
    --Class (.hide) thẻ cha nếu bỏ qua

TextBox : .val-required (Check Null), .val-integer (Check Integer)
TimeEdit : .val-time (Check định dạng time)
*@
<table class="edit-form">
    <tr>
        <td class="label">
			PART NO
		</td>
         <td>
             @Html.Partial("_TB_R_PART_SMQD_PART_combobox")   
            <span class="messageerror"></span>
        </td>        
    </tr>    
    @*<tr>
        <td class="label">
			SUPPLIER CODE
		</td>
         <td>
            @Html.DevExpress().ComboBox(settings =>
            {
                settings.Name = "_SUPPLIER_CODE";
                settings.Width = 200;
                settings.ControlStyle.CssClass = "textbox";

                settings.Properties.ValueField = "SUPPLIER_NAME";
                settings.Properties.ValueType = typeof(string);                                
                settings.Properties.Columns.Add("SUPPLIER_NAME", "NAME"); 
                settings.Properties.TextFormatString = "{0}";
                settings.SelectedIndex = 0;
                settings.Properties.ClientSideEvents.SelectedIndexChanged = "function(s, e) { _PART_ID.PerformCallback(); }";
            }).BindList(LSP.Models.TB_M_SUPPLIER_INFO.TB_M_SUPPLIER_INFOProvider.Instance.TB_M_SUPPLIER_INFO_Gets("")).GetHtml()
			<span class="messageerror"></span>
        </td>        
    </tr>
	<tr>
        <td class="label"> 
			PART NO  
		</td>
        <td>
            @Html.DevExpress().TextBox(settings =>
            {
                settings.Name = "_PART_NO";
                settings.Width = 200;
                settings.ControlStyle.CssClass = "textbox val-required";
                settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText;
                settings.Properties.ValidationSettings.RequiredField.ErrorText = "PART NO is required";
                settings.Properties.ValidationSettings.ErrorTextPosition = ErrorTextPosition.Right;
            }).GetHtml()
			<span class="messageerror"></span>
        </td>
    </tr>
	<tr>
        <td class="label"> 
			COLOR SFX  
		</td>
        <td>
            @Html.DevExpress().TextBox(settings =>
            {
                settings.Name = "_COLOR_SFX";
                settings.Width = 200;
                settings.ControlStyle.CssClass = "textbox val-required";
                settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText;
                settings.Properties.ValidationSettings.RequiredField.ErrorText = "COLOR SFX is required";
                settings.Properties.ValidationSettings.ErrorTextPosition = ErrorTextPosition.Right;
            }).GetHtml()
			<span class="messageerror"></span>
        </td>
    </tr>
	<tr>
        <td class="label"> 
			PART NAME
		</td>
        <td>
            @Html.DevExpress().TextBox(settings =>
            {
                settings.Name = "_PART_NAME";
                settings.Width = 200;
                settings.ControlStyle.CssClass = "textbox";
            }).GetHtml()
			<span class="messageerror"></span>
        </td>
    </tr>
	<tr>
        <td class="label">
			BACK NO
		</td>
        <td>
            @Html.DevExpress().TextBox(settings =>
            {
                settings.Name = "_BACK_NO";
                settings.Width = 200;
                settings.ControlStyle.CssClass = "textbox";
            }).GetHtml()
			<span class="messageerror"></span>
        </td>
    </tr>
    *@	
	<tr>
        <td class="label"> 
			SMQD DATETIME
		</td>
        <td>
			@Html.DevExpress().DateEdit(settings => 
			{
				settings.Name = "_SMQD_DATETIME";
                settings.ControlStyle.CssClass = "dateedit val-required";
				settings.Width = 200;
				settings.Properties.DisplayFormatString = "dd/MM/yyyy"; //"dd-MM-yyyy";
                settings.Properties.EditFormatString = "dd/MM/yyyy";
                settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText;
                settings.Properties.ValidationSettings.RequiredField.ErrorText = "SMQD DATETIME is required";
                settings.Properties.ValidationSettings.ErrorTextPosition = ErrorTextPosition.Right;
			}).GetHtml() 
			<span class="messageerror"></span>
        </td>
    </tr>
	<tr>
        <td class="label"> 
			SMQD QTY  
		</td>
        <td>
            @Html.DevExpress().SpinEdit(settings =>
            {
                settings.Name = "_SMQD_QTY";
                settings.Width = 200;
                settings.Properties.SpinButtons.ShowIncrementButtons = true;
                settings.Properties.Increment = 1;
                settings.Properties.NumberType = SpinEditNumberType.Integer;                
                settings.ControlStyle.CssClass = "textbox val-required";
                settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText;
                settings.Properties.ValidationSettings.RequiredField.ErrorText = "SMQD QTY is required";
                settings.Properties.ValidationSettings.ErrorTextPosition = ErrorTextPosition.Right;
            }).GetHtml()
			<span class="messageerror"></span>
        </td>
    </tr>
	<tr>
        <td class="label"> 
			SMQD TYPE  
		</td>
        <td>
            @Html.DevExpress().TextBox(settings =>
            {
                settings.Name = "_SMQD_TYPE";
                settings.Width = 200;
                settings.ControlStyle.CssClass = "textbox";
            }).GetHtml()
			<span class="messageerror"></span>
        </td>
    </tr>
	<tr>
        <td class="label"> 
			PIC  
		</td>
        <td>
            @Html.DevExpress().TextBox(settings =>
            {
                settings.Name = "_PIC";
                settings.Width = 200;
                settings.ControlStyle.CssClass = "textbox";
            }).GetHtml()
			<span class="messageerror"></span>
        </td>
    </tr>
	<tr>
        <td class="label"> 
			RUN NO  
		</td>
        <td>
            @Html.DevExpress().TextBox(settings =>
            {
                settings.Name = "_RUN_NO";
                settings.Width = 200;
                settings.ControlStyle.CssClass = "textbox";
            }).GetHtml()
			<span class="messageerror"></span>
        </td>
    </tr>
	<tr>
        <td class="label"> 
			REASON  
		</td>
        <td>
            @Html.DevExpress().TextBox(settings =>
            {
                settings.Name = "_REASON";
                settings.Width = 200;
                settings.ControlStyle.CssClass = "textbox";
            }).GetHtml()
			<span class="messageerror"></span>
        </td>
    </tr>
	<tr>
        <td class="label"> 
			STATUS  
		</td>
        <td>
            @Html.DevExpress().TextBox(settings =>
            {
                settings.Name = "_STATUS";
                settings.Width = 200;
                settings.ControlStyle.CssClass = "textbox";
            }).GetHtml()
			<span class="messageerror"></span>
        </td>
    </tr>
	<tr>
        <td class="label"> 
			IS ACTIVE  
		</td>
        <td>
            @Html.DevExpress().CheckBox(
            settings =>
            {                
                settings.Name = "_IS_ACTIVE";
                settings.ControlStyle.CssClass = "textbox";
            }).GetHtml()            
			<span class="messageerror"></span>
        </td>
    </tr>
	
    <tr>
        <td colspan="2" style="padding-top: 20px;">
            <div style="float: right; margin-right: 20px;">
                @Html.DevExpress().Button(settings =>
                {
                    settings.Name = "btnCancel";
                    settings.ControlStyle.CssClass = "button";
                    settings.Text = "Cancel";
                    settings.ClientSideEvents.Click = "OnBtnCancelClicked";
                    settings.Images.Image.IconID = DevExpress.Web.ASPxThemes.IconID.ActionsCancel16x16;
                }).GetHtml()
            </div>
            <div style="float: right; margin-right: 5px">
			 @if (Html.Toyota().Authorization.IsAuthorizedToAccessFeature
				 (Html.Toyota().Page.ControllerName.ToString(), "Edit"))
                {
					@Html.DevExpress().Button(settings =>
					{
						settings.Name = "btnUpdate";
						settings.ControlStyle.CssClass = "button";
						settings.Text = "Save";
						settings.UseSubmitBehavior = true;
                        settings.Images.Image.IconID = DevExpress.Web.ASPxThemes.IconID.SaveSave16x16;
						settings.ClientSideEvents.Click = "function(s, e){ OnBtnUpdateClicked(this) }";
					}).GetHtml()
				}
            </div>
            <span id="userStatus" class="action-status"></span>
        </td>
    </tr>
</table>

